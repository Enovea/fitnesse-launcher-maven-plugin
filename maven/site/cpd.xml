<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="88" tokens="552">
<file line="116" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<file line="281" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Goal that runs FitNesse tests using fitnesse.junit.TestHelper. Intended to be bound to the \'integration-test\' phase.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "createSymLink", 2 );
                append( sb, "fitnesse-launcher-maven-plugin unpacks a fresh copy of FitNesse under /target; Only your project specific FitNesse tests need go under src/test/fitnesse. By setting \'createSymLink\' to \'true\', fitnesse-launcher-maven-plugin will create a FitNesse SymLink directly to your test suite under src/test/fitnesse. This is most useful when developing tests in \'wiki\' mode, as then you can directly scm commit your changes. If you prefer to copy-resources from src/test/fitnesse into /target/fitnesse, let \'createSymLink\' be \'false\'.", 3 );
                append( sb, "Expression: ${fitnesse.createSymLink}", 3 );
                append( sb, "", 0 );

                append( sb, "excludeSuiteFilter", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.excludeSuiteFilter}", 3 );
                append( sb, "", 0 );

                append( sb, "logDir", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.logDir}", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDescriptor", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${plugin}", 3 );
                append( sb, "", 0 );

                append( sb, "port (Default: 9123)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.port}", 3 );
                append( sb, "", 0 );

                append( sb, "project", 2 );
                append( sb, "Maven project, to be injected by Maven itself.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${project}", 3 );
                append( sb, "", 0 );

                append( sb, "reportsDir (Default: ${fitnesse.working}/reports)", 2 );
                append( sb, "This is where build results go.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "", 0 );

                append( sb, "resultsDir (Default: ${fitnesse.working}/results)", 2 );
                append( sb, "This is where build results go.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "", 0 );

                append( sb, "root (Default: FitNesseRoot)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.root}", 3 );
                append( sb, "", 0 );

                append( sb, "suite", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.suite}", 3 );
                append( sb, "", 0 );

                append( sb, "suiteFilter", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.suiteFilter}", 3 );
                append( sb, "", 0 );

                append( sb, "summaryFile", 2 );
                append( sb, "The summary file to write integration test results to.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${fitnesse.working}/results/failsafe-summary.xml", 3 );
                append( sb, "", 0 );

                append( sb, "test", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.test}", 3 );
                append( sb, "", 0 );

                append( sb, "testResourceDirectory (Default: src/test/fitnesse)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.test.resource.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "workingDir (Default: ${project.build.directory}/fitnesse)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.working}", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "set-up".equals( goal ) )
]]>
</codefragment>
</duplication>
<duplication lines="88" tokens="540">
<file line="116" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<file line="281" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<file line="371" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Goal that runs FitNesse tests using fitnesse.junit.TestHelper. Intended to be bound to the \'integration-test\' phase.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "createSymLink", 2 );
                append( sb, "fitnesse-launcher-maven-plugin unpacks a fresh copy of FitNesse under /target; Only your project specific FitNesse tests need go under src/test/fitnesse. By setting \'createSymLink\' to \'true\', fitnesse-launcher-maven-plugin will create a FitNesse SymLink directly to your test suite under src/test/fitnesse. This is most useful when developing tests in \'wiki\' mode, as then you can directly scm commit your changes. If you prefer to copy-resources from src/test/fitnesse into /target/fitnesse, let \'createSymLink\' be \'false\'.", 3 );
                append( sb, "Expression: ${fitnesse.createSymLink}", 3 );
                append( sb, "", 0 );

                append( sb, "excludeSuiteFilter", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.excludeSuiteFilter}", 3 );
                append( sb, "", 0 );

                append( sb, "logDir", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.logDir}", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDescriptor", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${plugin}", 3 );
                append( sb, "", 0 );

                append( sb, "port (Default: 9123)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.port}", 3 );
                append( sb, "", 0 );

                append( sb, "project", 2 );
                append( sb, "Maven project, to be injected by Maven itself.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${project}", 3 );
                append( sb, "", 0 );

                append( sb, "reportsDir (Default: ${fitnesse.working}/reports)", 2 );
                append( sb, "This is where build results go.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "", 0 );

                append( sb, "resultsDir (Default: ${fitnesse.working}/results)", 2 );
                append( sb, "This is where build results go.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "", 0 );

                append( sb, "root (Default: FitNesseRoot)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.root}", 3 );
                append( sb, "", 0 );

                append( sb, "suite", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.suite}", 3 );
                append( sb, "", 0 );

                append( sb, "suiteFilter", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.suiteFilter}", 3 );
                append( sb, "", 0 );

                append( sb, "summaryFile", 2 );
                append( sb, "The summary file to write integration test results to.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${fitnesse.working}/results/failsafe-summary.xml", 3 );
                append( sb, "", 0 );

                append( sb, "test", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.test}", 3 );
                append( sb, "", 0 );

                append( sb, "testResourceDirectory (Default: src/test/fitnesse)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.test.resource.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "workingDir (Default: ${project.build.directory}/fitnesse)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.working}", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "set-up".equals( goal ) )
]]>
</codefragment>
</duplication>
<duplication lines="27" tokens="160">
<file line="206" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<file line="252" path="/home/stewart/workspace/fitnesse-launcher-maven-plugin/target/generated-sources/plugin/uk/co/javahelp/maven/plugin/fitnesse/mojo/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "This Mojo is devoted simply to fetching and unpacking FitNesse into a correct working directory structure, and making sure everything is cleanly setup for running FitNesse.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "pluginDescriptor", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${plugin}", 3 );
                append( sb, "", 0 );

                append( sb, "project", 2 );
                append( sb, "Maven project, to be injected by Maven itself.", 3 );
                append( sb, "Required: Yes", 3 );
                append( sb, "Expression: ${project}", 3 );
                append( sb, "", 0 );

                append( sb, "workingDir (Default: ${project.build.directory}/fitnesse)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "Expression: ${fitnesse.working}", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "shutdown".equals( goal ) )
]]>
</codefragment>
</duplication>
</pmd-cpd>